#!/usr/bin/env ruby

require 'chronicle'
require "thor"
 
class ChronicleCLI < Thor
  desc "since commit", "Generate changes since the given commit"
  option :delimiter
  def since(commit)
    repository = Chronicle::Repository.new(Dir.pwd)
    log = repository.log_since(commit)
    character = options[:delimiter] if options[:delimiter]
    
    generator = Chronicle::Generator.new(log)
    generator.character = character
    
    puts generator.generate
  end
  
  desc "between start_commit end_commit", "Generate changes between the two commits"
  option :delimiter
  def between(first, last)
    repository = Chronicle::Repository.new(Dir.pwd)
    log = repository.log_between(first, last)
    character = options[:delimiter] if options[:delimiter]
    
    generator = Chronicle::Generator.new(log)
    generator.character = character
    
    puts generator.generate
  end
end
 
ChronicleCLI.start(ARGV)
